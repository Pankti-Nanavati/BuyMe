<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="../../../css/salesReport.css">
    <!-- Required CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">

<!-- Required JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>

  </head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="/api/homepage">Hi Admin !</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/api/admin/logout">Logout</a>
          </li>
        </ul>
      </div>       
    </div>
  </nav>

  <main>
    <h2> Generate Sales Report</h2>
      <form id="salesReportForm" style="margin-top: 50px;">
        <label for="from">From:</label>
        <input type="datetime-local" id="from" name="from">
        <label for="to">To:</label>
        <input type="datetime-local" id="to" name="to">
        <button type="submit" id="submitBtn">Submit</button>
      </form>
  </main>
  
  <div class="hidden" id="totalearnings">
 <h4 style="text-align: center; margin-top: 70px;" id="totalEarnings"></h4>
  </div>

<div class="hidden" id="topBuyer">
<h2 style="text-align: center; margin-top: 70px;">Top Buyers</h2>
<table id="topBuyerTable">
  <thead>
    <tr>
      <th>Name</th>
      <th>Email Id</th>
    </tr>
  </thead>
  <tbody id="topBuyerTableBody">
  </tbody>
</table>
</div>

<div class="hidden" id="topProduct">
<h2 style="text-align: center; margin-top: 70px;">Top Products</h2>
<table id="topProductTable">
  <thead>
    <tr>
      <th>Product Name</th>
      <th>Product Id</th>
    </tr>
  </thead>
  <tbody id="topProductTableBody">
  </tbody>
</table>
</div>

<div class="hidden" id="earningsUser">
<h2 style="text-align: center; margin-top: 70px;">Earning per User</h2>
<table id="earningsUserTable">
  <thead>
    <tr>
      <th>Buyer Name</th>
      <th>Email Id</th>
      <th>Earnings</th>
    </tr>
  </thead>
  <tbody id="earningsUserTableBody">
  </tbody>
</table>
</div>

<div class="hidden" id="earningsCategory">
<h2 style="text-align: center; margin-top: 70px;">Earning per Category</h2>
<table id="earningsCategoryTable">
  <thead>
    <tr>
      <th>Subcategory Name</th>
      <th>Subcategory Id</th>
      <th>Earnings</th>
    </tr>
  </thead>
  <tbody id="earningsCategoryTableBody">
  </tbody>
</table>
</div>

<div class="hidden" id="earningsItem">
<h2 style="text-align: center; margin-top: 70px;">Earning per Item</h2>
<table id="earningsItemTable" style="margin-bottom: 100px;">
  <thead>
    <tr>
      <th>Product Name</th>
      <th>Product Id</th>
      <th>Earnings</th>
    </tr>
  </thead>
  <tbody id="earningsItemTableBody">
  </tbody>
</table>
</div>

  </body>
  </html>
  <script>





const salesReportForm = document.querySelector('#salesReportForm');
const topBuyerTableBody = document.querySelector('#topBuyerTableBody');
const topProductTableBody = document.querySelector('#topProductTableBody');
const earningsUserTableBody = document.querySelector('#earningsUserTableBody');
const earningsCategoryTableBody = document.querySelector('#earningsCategoryTableBody');
const earningsItemTableBody = document.querySelector('#earningsItemTableBody');
const earningsDisplay = document.getElementById('totalEarnings');
        
  salesReportForm.addEventListener('submit', (event) => {
    event.preventDefault();
    const from = document.querySelector('#from').value;
    const to = document.querySelector('#to').value;
    fetch('/api/admin/create/report', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ from, to })
    })
    .then(response => response.json())
    .then(data => {
      console.log(data);
      // Clear previous table data
      topBuyerTableBody.innerHTML = '';
      top_buyers= data['Top_buyers'];
      top_products= data['Top_products'];
      total_earnings=data['total_earnings'];
      total_earnings_user=data['total_earnings_per_user'];
      total_earnings_category=data['total_earnings_per_category'];
      total_earnings_item=data['total_earnings_per_item'];
      // Populate summary table and calculate total earnings
      
      earningsDisplay.innerHTML = `Total Earnings: $ ${total_earnings}`;
      totalearnings.classList.remove('hidden');

      top_buyers.forEach(sale => {
        const row = topBuyerTableBody.insertRow();
        row.innerHTML = `
          <td>${sale.name}</td>
          <td>${sale.buyer_email_id}</td>
        `;
        topBuyer.classList.remove('hidden');


      topProductTableBody.innerHTML = '';
      // Populate summary table and calculate total earnings
      top_products.forEach(sale => {
        const row = topProductTableBody.insertRow();
        row.innerHTML = `
          <td>${sale.product_name}</td>
          <td>${sale.product_id}</td>
        `;
        topProduct.classList.remove('hidden');
      });

      earningsUserTableBody.innerHTML = '';
      // Populate summary table and calculate total earnings
      total_earnings_user.forEach(sale => {
        const row = earningsUserTableBody.insertRow();
        row.innerHTML = `
          <td>${sale.name}</td>
          <td>${sale.buyer_email_id}</td>
          <td>${sale.user_earnings}</td>
        `;
        earningsUser.classList.remove('hidden');
      });

      earningsItemTableBody.innerHTML = '';
      // Populate summary table and calculate total earnings
      total_earnings_item.forEach(sale => {
        const row = earningsItemTableBody.insertRow();
        row.innerHTML = `
        <td>${sale.product_name}</td>
          <td>${sale.product_id}</td>
          <td>${sale.item_earnings}</td>
        `;
        earningsItem.classList.remove('hidden');
      });

      earningsCategoryTableBody.innerHTML = '';
      // Populate summary table and calculate total earnings
      total_earnings_category.forEach(sale => {
        const row = earningsCategoryTableBody.insertRow();
        row.innerHTML = `
        <td>${sale.subcategory_name}</td>
          <td>${sale.subcategory_id}</td>
          <td>${sale.category_earnings}</td>
        `;
        earningsCategory.classList.remove('hidden');
      });
      });
    })
    .catch(error => console.error(error));
  });




 
  
</script>