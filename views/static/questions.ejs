<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="../css/questions.css">
<!-- Required CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
<!-- Required JavaScript -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
</head>
<body>
  <%- include('navbar') %>
  <!-- <div class="d-grid col-4 mx-auto my-5">
    <button type="button" onclick="askquestion()" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#bidModal">Ask a Question</button>
    <button type="button" onclick="askquestion()" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#bidModal">Ask a Question</button>
</div> -->
<div class="row justify-content-center my-5">
    <div class="col-md-4">
      <div class="input-group">
        <!-- <input type="text" class="form-control" placeholder="Search by keyword" aria-label="Search by keyword"> -->
        <!-- <input type="text" class="form-control" placeholder="Search by keyword" aria-label="Search by keyword">
        <span class="input-group-text"><i class="bi bi-search"></i></span> -->
        <input id="search-input" type="text" class="form-control" placeholder="Search by keyword" aria-label="Search by keyword">
        <button id="search-button" class="btn btn-secondary" type="button"><i class="bi bi-search"></i></button>
        <button class="btn btn-primary ms-2" type="button" id="reset-btn">Reset</button>
        <button class="btn btn-primary ms-2" type="button" data-bs-toggle="modal" data-bs-target="#askQuestionModal">Ask a question</button>
      </div>
    </div>
  </div>


  <div class="container">
    <div id="qa-container"></div>
  </div>

  <div class="container">
    <div id="keywordqa-container"></div>
  </div>

  
  <!-- Modal -->
<div class="modal fade" id="askQuestionModal" tabindex="-1" aria-labelledby="askQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="askQuestionModalLabel">Ask a question</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label for="questionInput" class="form-label">Enter your question:</label>
          <!-- <input type="text" class="form-control" id="questionInput" rows="5"> -->
          <textarea class="form-control" id="question-input" rows="5"></textarea>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="submitQuestionBtn" data-bs-dismiss="modal">Submit</button>
        </div>
      </div>
    </div>
  </div>
</body>
</html>


<script>
const searchButton = document.getElementById('search-button');
searchButton.addEventListener('click', (event) => {
  event.preventDefault(); // Prevents the form from submitting normally
  const searchInput = document.getElementById('search-input');
  const keyword = searchInput.value.trim();
  if (keyword !== '') {
    fetch('/api/fetchQA/filter', {
      method: 'POST',
      body: JSON.stringify({ keyword }),
      headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
      console.log(data);
      data.forEach(qa => {
        const questionDiv = document.createElement('div');
        questionDiv.classList.add('card', 'mb-3');
        const questionHeader = document.createElement('div');
        questionHeader.classList.add('card-header');
        questionHeader.textContent = qa.question;
        questionDiv.appendChild(questionHeader);
        const answerBody = document.createElement('div');
        answerBody.classList.add('card-body');
        answerBody.textContent = qa.answer ? qa.answer : 'No response yet';
        questionDiv.appendChild(answerBody);
        // Add the question and answer div to the container
        const keywordcontainer = document.getElementById('keywordqa-container');
        keywordcontainer.appendChild(questionDiv);
      });
      const qa_container = document.getElementById("qa-container");
      qa_container.classList.add("hidden");
    })
    .catch(error => console.error(error));
  }
});




// Fetch data from the API
fetch('/api/fetchQA')
.then(response => response.json())
    .then(data => {
      // Loop through the data and create a div for each question and answer
      data.forEach(qa => {
        const questionDiv = document.createElement('div');
        questionDiv.classList.add('card', 'mb-3');
        const questionHeader = document.createElement('div');
        questionHeader.classList.add('card-header');
        questionHeader.textContent = qa.question;
        questionDiv.appendChild(questionHeader);
        const answerBody = document.createElement('div');
        answerBody.classList.add('card-body');
        answerBody.textContent = qa.answer ? qa.answer : 'No response yet';
        questionDiv.appendChild(answerBody);
        // Add the question and answer div to the container
        const qacontainer = document.getElementById('qa-container');
        qacontainer.appendChild(questionDiv);
      });
     
    })


  const submitQuestionBtn = document.getElementById('submitQuestionBtn');
const questionInput = document.getElementById('question-input');
submitQuestionBtn.addEventListener('click', (event) => {
  event.preventDefault(); // Prevent form from submitting normally
  const query = questionInput.value;
  fetch('/api/userQuery', {
    method: 'POST',
    body: JSON.stringify({ query }),
    headers: { 'Content-Type': 'application/json' }
  })
  .then(response => {
    if (response.ok) {
      // Reload the page if the request is successful
      location.reload();
    } else {
      throw new Error('Request failed!');
    }
  })
  .catch(error => console.error(error));
});

const resetBtn = document.getElementById('reset-btn');
resetBtn.addEventListener('click', function() {
  location.reload();
});


</script>