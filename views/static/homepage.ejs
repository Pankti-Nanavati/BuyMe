<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="../css/homepage.css">
  <!-- <script src="homepage.js"></script> -->
  <!-- Required CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
  
  <!-- Required JavaScript -->
  <script src="../scripts/jquery.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
  
  
</head>
<body>
  <%- include('navbar') %>
  
  <div class="d-flex justify-content-center mt-3">
    <div class="dropdown me-2">
      <select name="category" id="category" class="form-control">
        <option value="">Select Category</option>
      </select>
    </div>
    <div class="dropdown ms-2">
      <select name="subcategory" id="subcategory" class="form-control">
        <option value="">Select Subcategory</option>
      </select>
    </div>
    <button type="button" class="btn btn-primary ms-2" id="submit-button">Submit</button>
  </div>
  
  
  
  <div class="container mt-3">
    <div id="productList">
    </div>
  </div>
  
  <table id="auctionTable" class="hidden">
    <thead>
      <tr>
        <th>Product Name</th>
        <th>End Time</th>
        <th>Price</th>
      </tr>
    </thead>
    <tbody id="auctionTableBody">
    </tbody>
  </table>
  
  <!-- <table id="auction-table"></table> -->
</body>
</html>
<script>
  
  $(document).ready(function() {
    // Get the category options from the API and populate the dropdown
    $.get('http://localhost:3000/api/category', function(data) {
      $.each(data, function(index, category) {
        console.log('Category', data);
        $('#category').append($('<option>').text(category.category_name).attr('value', category.category_id));
        });
      });
      
      // When a category is selected, get the corresponding subcategories and populate the dropdown
      $('#category').on('change', function() {
        var categoryId = $(this).val();
        if (categoryId) {
          $.get(`http://localhost:3000/api/category/${categoryId}/subcategories`, function(data) {
            $('#subcategory').empty();
            $('#subcategory').append($('<option>').text('Select a subcategory').attr('value', ''));
              $.each(data, function(index, subcategory) {
                $('#subcategory').append($('<option>').text(subcategory.subcategory_name).attr('value', subcategory.subcategory_id));
                });
              });
            } else {
              $('#subcategory').empty();
              $('#subcategory').append($('<option>').text('Select a subcategory').attr('value', ''));
              }
            });
          });
          
          
          $("#submit-button").click(function() { // attach click event listener to submit button
            const selectedId = $("#subcategory").val();
            $.ajax({
              url: `subcategory/${selectedId}/products`, // replace with your API endpoint
              type: "GET",
              data: { 
              },
              success: function(response) {
                console.log(response);
                var productsContainer = $("#productList");
                productsContainer.empty(); // clear previous products (if any)
                response.forEach(function(product) { // loop over products
                  var productDiv = $("<div class='product-item'>"); // create product div
                    var productCard = $("<div class='product'>"); // create product display card
                      // productCard.append("<div class='product-image'><img src='" + product.image + "' alt='Product Image'></div>");
                      productCard.append("<div class='product-info'><a href='product?productId=" + product.product_id + "'><h2 class='product-title'>" + product.product_name + "</h2></a><p class='product-description'>" + product.brand + "</p></div>");
                      productDiv.append(productCard); // append product card to product div
                      productsContainer.append(productDiv); // append product div to container
                    });
                  },
                  error: function(xhr, status, error) {
                    console.log("Error:", error);
                  }
                });
              });
              
             
              // Make API call
              fetch('/api/auctions')
              .then(response => response.json())
              .then(data => {
                console.log('Auction', data);
                // Parse response data
                const auctions = data;
                
                // Create table element
                const table = document.getElementById('auction-table');
                  auctionTableBody.innerHTML='';
                  
                  auctions.forEach(auction=>{
                    const row= auctionTableBody.insertRow();
                    row.innerHTML = `
                    <td>${auction.product_id}</td>
                    <td>${auction.end_time}</td>
                    <td>${auction.initial_price}</td>`;
                    auctionTable.classList.remove('hidden');
                  })
                })
                .catch(error => {
                  console.error(error);
                });
                

                //Alert dropdown
                async function populateDropdown() {
                  let dropdownMenu = document.getElementById('dropdown-menu');
                  dropdownMenu.innerHTML = '';
                  
                  try {
                    // Make an API call to retrieve the data for the dropdown items
                    let response = await fetch('/api/alert');
                    let alerts = await response.json();
                    
                    // Populate the dropdown menu with items from the alerts object
                    for (let i = 0; i < alerts.length; i++) {
                      let dropdownItem = document.createElement('a');
                      dropdownItem.classList.add('dropdown-item');
                      dropdownItem.innerText = alerts[i].product_name;
                      dropdownMenu.appendChild(dropdownItem);
                    }
                  } catch (error) {
                    console.error(error);
                  }
                }
              </script>